
	-- intern
	file TestCaseLinesAppendArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesAppendArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"

	file TestCaseLinesAppendTextStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesAppendTextFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesDeleteAllArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesDeleteAllArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesDeleteArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesDeleteArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesGetArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesGetArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesInsertArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesInsertArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"

	file TestCaseLinesInsertTextStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesInsertTextFile "../../SimulationResults/{@c3}_{@c2}.xml"

	file TestCaseLinesPointerCopyStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesPointerCopyFile "../../SimulationResults/{@c3}_{@c2}.xml"

	file TestCaseLinesSetArrayStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesSetArrayFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesSetTextStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesSetTextFile "../../SimulationResults/{@c3}_{@c2}.xml"
	
	file TestCaseLinesSizeStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseLinesSizeFile "../../SimulationResults/{@c3}_{@c2}.xml"
		
testSuiteLines:
proc
	call $testCaseLinesAppendArray
	call $testCaseLinesAppendText
	call $testCaseLinesDeleteAllArray
	call $testCaseLinesDeleteArray
	call $testCaseLinesGetArray
	call $testCaseLinesInsertArray	
	call $testCaseLinesInsertText
	call $testCaseLinesPointerCopy
	call $testCaseLinesSetArray
	call $testCaseLinesSetText
	call $testCaseLinesSize
end proc


testCaseLinesAppendArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesAppendArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesAppendArrayFile
    equ TestCaseNumberOfAssertions 3
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesAppendArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesAppendArray test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesAppendText:
proc
    file pointer copy TestCaseStartFile TestCaseLinesAppendTextStartFile
    file pointer copy TestCaseFile TestCaseLinesAppendTextFile
    equ TestCaseNumberOfAssertions 3
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesAppendText

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesAppendText test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesDeleteAllArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesDeleteAllArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesDeleteAllArrayFile
    equ TestCaseNumberOfAssertions 3
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesDeleteAllArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesDeleteAllArrayy test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesDeleteArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesDeleteArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesDeleteArrayFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesDeleteArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesDeleteArray test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesGetArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesGetArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesGetArrayFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesGetArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesGetArray test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesInsertArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesInsertArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesInsertArrayFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesInsertArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesInsertArray test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc



testCaseLinesInsertText:
proc
    file pointer copy TestCaseStartFile TestCaseLinesInsertTextStartFile
    file pointer copy TestCaseFile TestCaseLinesInsertTextFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesInsertText

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesInsertText test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesPointerCopy:
proc
    file pointer copy TestCaseStartFile TestCaseLinesPointerCopyStartFile
    file pointer copy TestCaseFile TestCaseLinesPointerCopyFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesPointerCopy

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesPointerCopy test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesSetArray:
proc
    file pointer copy TestCaseStartFile TestCaseLinesSetArrayStartFile
    file pointer copy TestCaseFile TestCaseLinesSetArrayFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesSetArray

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesSetArray test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseLinesSetText:
proc
    file pointer copy TestCaseStartFile TestCaseLinesSetTextStartFile
    file pointer copy TestCaseFile TestCaseLinesSetTextFile
    equ TestCaseNumberOfAssertions 1
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesSetText

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesSetText test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc


testCaseLinesSize:
proc
    file pointer copy TestCaseStartFile TestCaseLinesSizeStartFile
    file pointer copy TestCaseFile TestCaseLinesSizeFile
    equ TestCaseNumberOfAssertions 3
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testLinesSize

	if $StandardTestFailure != 0
        lines append message TestCaseLines "LinesSize test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc



