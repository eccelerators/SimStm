
	-- intern
	file TestCaseBus64StartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseBus64File "../../SimulationResults/{@c3}_{@c2}.xml"
	file TestCaseBus64VerifySuccessStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseBus64VerifySuccessFile "../../SimulationResults/{@c3}_{@c2}.xml"
	file TestCaseBus64VerifyFailStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseBus64VerifyFailFile "../../SimulationResults/{@c3}_{@c2}.xml"

	file TestCaseBus64TimeOutReadStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseBus64TimeOutReadFile "../../SimulationResults/{@c3}_{@c2}.xml"
	file TestCaseBus64TimeOutWriteStartFile "../../SimulationResults/{@c3}_{@c2}.start"
	file TestCaseBus64TimeOutWriteFile "../../SimulationResults/{@c3}_{@c2}.xml"
		
testSuiteBusAvalon64:
proc
    bus pointer copy busToTest wishbone64
	bus timeout set busToTest 1000
	call $testCaseBus64
	call $testCaseBus64VerifySuccess
	call $testCaseBus64VerifyFail
	call $testCaseBus64TimeOutRead
	call $testCaseBus64TimeOutWrite
end proc


testCaseBus64:
proc
    file pointer copy TestCaseStartFile TestCaseBus64StartFile
    file pointer copy TestCaseFile TestCaseBus64File
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testBus64

	if $StandardTestFailure != 0
        lines append message TestCaseLines "Bus64 test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseBus64VerifySuccess:
proc
    file pointer copy TestCaseStartFile TestCaseBus64VerifySuccessStartFile
    file pointer copy TestCaseFile TestCaseBus64VerifySuccessFile
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testBus64VerifySuccess

	if $StandardTestFailure != 0
        lines append message TestCaseLines "Bus64VerifySuccess test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseBus64VerifyFail:
proc
    file pointer copy TestCaseStartFile TestCaseBus64VerifyFailStartFile
    file pointer copy TestCaseFile TestCaseBus64VerifyFailFile
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testBus64VerifyFail

	if $StandardTestFailure != 0
        lines append message TestCaseLines "Bus64VerifyFail test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseBus64TimeOutRead:
proc
    file pointer copy TestCaseStartFile TestCaseBus64TimeOutReadStartFile
    file pointer copy TestCaseFile TestCaseBus64TimeOutReadFile
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testBus64TimeOutRead

	if $StandardTestFailure != 0
        lines append message TestCaseLines "Bus64TimeOutRead test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc

testCaseBus64TimeOutWrite:
proc
    file pointer copy TestCaseStartFile TestCaseBus64TimeOutWriteStartFile
    file pointer copy TestCaseFile TestCaseBus64TimeOutWriteFile
    call $beginTestCase
    
    if $SKIP = $NOT_SKIPPED
	    lines append message TestCaseLines "TestCase not implemented yet"
	    call $skipTestCase
	    call $endTestCase
	    return   
    end if
    
    call $testBus64TimeOutWrite

	if $StandardTestFailure != 0
        lines append message TestCaseLines "Bus64TimeOutWrite test failed"
        call $failureTestCase
    end if
    
    call $endTestCase
    
end proc