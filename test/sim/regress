#! /usr/bin/tclsh
# store default  repo stimulus
file copy -force "stm/stimulus_file.stm" "stm/back.stm"
#  get all the test case directories
set tlst [glob -directory ../self_test -type d  "*"]

set passed 0
set failed 0
set tlen [llength $tlst]
##  for each test
foreach t $tlst {
    # create source and destination stimulus file
    set des "stm/stimulus_file.stm"
    set src $t
    # get the stimulus file name for this test
    set stmf [split [glob -type f $t/*.stm] "/"]
    #puts [lindex $stmf end]
    append src "/" [lindex $stmf end]
    file copy -force $src $des
    
    # open the log file target
    set logf "$t/log.out"
    set lh [open $logf "w"]
    set status ""
    catch {exec ./run} results options
    set details [dict get $options]
    foreach d $details {
        puts $lh $d
    }
    close $lh
    
    ##  get the expect and log file and compare
    ##    find expect text in log output.
    set exh [open "$t/expect" "r"]
    set ach [open $logf "r"]
    set alst [list]
    while {![eof $ach]} {
        set a [gets $ach]
        if {$a != ""} {
            lappend alst $a
        }
    }
    set elst [list]
    while {![eof $exh]} {
        set e [gets $exh]
        if {$e != ""} {
            lappend elst $e
        }
    }
    close $exh
    close $ach
    ## get expected # lines to match
    set exlen [llength $elst]
    puts "Expected Length match:  $exlen"
    set mlen 0
    foreach e $elst {
        #puts "Expect:  $e"
        foreach a $alst {
            #puts "Actual:  $a"
            set is [string first $e $a]
            if {$is >= 0} {
                #puts "Found:  $a"
                incr mlen
            }
        }
    }
    
    puts "Found $mlen matches"
    ## if # of lines expected to match ... pass
    if {$exlen == $mlen} {
        puts "$t PASSED"
        incr passed
    } else {
        puts "$t FAILED"
        incr failed
    }
    
    
}

puts "For $tlen tests:  $passed  PASSED and  $failed  FAILED"

# restore  default  stimulus
file copy -force "stm/back.stm" "stm/stimulus_file.stm"
